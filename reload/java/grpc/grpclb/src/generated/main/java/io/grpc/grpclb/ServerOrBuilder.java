// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: load_balancer.proto

package io.grpc.grpclb;

public interface ServerOrBuilder extends
    // @@protoc_insertion_point(interface_extends:grpc.lb.v1.Server)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A resolved address for the server, serialized in network-byte-order. It may
   * either be an IPv4 or IPv6 address.
   * </pre>
   *
   * <code>bytes ip_address = 1;</code>
   */
  com.google.protobuf.ByteString getIpAddress();

  /**
   * <pre>
   * A resolved port number for the server.
   * </pre>
   *
   * <code>int32 port = 2;</code>
   */
  int getPort();

  /**
   * <pre>
   * An opaque but printable token given to the frontend for each pick. All
   * frontend requests for that pick must include the token in its initial
   * metadata. The token is used by the backend to verify the request and to
   * allow the backend to report load to the gRPC LB system. The token is also
   * used in client stats for reporting dropped calls.
   * </pre>
   *
   * <code>string load_balance_token = 3;</code>
   */
  java.lang.String getLoadBalanceToken();
  /**
   * <pre>
   * An opaque but printable token given to the frontend for each pick. All
   * frontend requests for that pick must include the token in its initial
   * metadata. The token is used by the backend to verify the request and to
   * allow the backend to report load to the gRPC LB system. The token is also
   * used in client stats for reporting dropped calls.
   * </pre>
   *
   * <code>string load_balance_token = 3;</code>
   */
  com.google.protobuf.ByteString
      getLoadBalanceTokenBytes();

  /**
   * <pre>
   * Indicates whether this particular request should be dropped by the client.
   * If the request is dropped, there will be a corresponding entry in
   * ClientStats.calls_finished_with_drop.
   * </pre>
   *
   * <code>bool drop = 4;</code>
   */
  boolean getDrop();
}
